{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAOO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,4EAAiC;;;;;;;;;;;;;;;;;;;;;;ACCyB;AACF;AACX;AAEE;AAC/C,yEAAyE;AACH,CAAC,sCAAsC;;AAOtG,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;0GADd,oEAAa,EAAE,kEAAgB,EAAE,uDAAW;mIAG3C,SAAS,mBAJL,wDAAY,EAAE,gFAAkB,aACrC,oEAAa,EAAE,kEAAgB,EAAE,uDAAW;;;;;;;;;;;;;;;;;;;;ACT3B;;;;;;ICQzB,yEAAiC;IAEN,sEAAW;IAAA,4DAAK;IACvC,wEAAqB;IAAA,uDAAwB;IAAA,4DAAI;IAEjD,yEAA4B;IAAA,qEAAU;IAAA,4DAAK;IAC3C,0EAAyC;IAAA,uDAAmB;IAAA,4DAAM;;;IAH7C,0DAAwB;IAAxB,0FAAwB;IAGJ,0DAAmB;IAAnB,qFAAmB;;;IAIhE,0EAA6E;IAC3E,sFAAyB;IAAA,yEAAQ;IAAA,uDAAiB;IAAA,4DAAS;IAAA,8DAC7D;IAAA,4DAAM;;;IAD6B,0DAAiB;IAAjB,mFAAiB;;ADbjD,MAAM,kBAAkB;IAK7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,SAAI,GAAU,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,WAAM,GAAmD,IAAI,CAAC;IAEvB,CAAC;IAExC,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvF,MAAM,QAAQ,GAAkB,sCAAS,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;YACnE,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,GAAG,qDAAwB,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACxF,CAAC;;oFAtBU,kBAAkB;gHAAlB,kBAAkB;QCR/B,yEAA4B;QACP,4EAAiB;QAAA,4DAAK;QAEvC,yEAAkB;QAC0B,2EAAgB;QAAA,4DAAQ;QAClE,2EAAiH;QAA1D,2LAAyB;QAAhF,4DAAiH;QAGnH,4EAA4D;QAAvB,0IAAS,gBAAY,IAAC;QAAC,sEAAW;QAAA,4DAAS;QAEhF,+GAQM;QAEN,gHAEM;QACR,4DAAM;;QAlBqD,0DAAyB;QAAzB,oFAAyB;QAK5E,0DAAY;QAAZ,4EAAY;QAUZ,0DAAoC;QAApC,wGAAoC;;;;;;;;;;;;;;;;ACpB9C,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/sql-script/sql-script.component.ts","./src/app/sql-script/sql-script.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'script-keeper';\n}\n","<app-sql-script></app-sql-script>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n//import { SqlScriptComponent } from './sql-script/sql-script.component';\nimport { SqlScriptComponent } from './sql-script/sql-script.component' //'./sql-script/sql-script.component';\n\n@NgModule({\n  declarations: [AppComponent, SqlScriptComponent],\n  imports: [BrowserModule, HttpClientModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-sql-script',\n  templateUrl: './sql-script.component.html',\n})\nexport class SqlScriptComponent implements OnInit {\n  data: any[] = [];\n  selectedKey = '';\n  result: { description: string; script: string } | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.loadExcel();\n  }\n\n  loadExcel(): void {\n    this.http.get('assets/scripts.xlsx', { responseType: 'arraybuffer' }).subscribe((data) => {\n      const workbook: XLSX.WorkBook = XLSX.read(data, { type: 'array' });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      this.data = XLSX.utils.sheet_to_json(sheet);\n    });\n  }\n\n  findScript(): void {\n    const match = this.data.find((row) => row.Key === this.selectedKey);\n    this.result = match ? { description: match.Description, script: match.Script } : null;\n  }\n}\n","<div class=\"container mt-4\">\n    <h2 class=\"mb-4\">SQL Script Finder</h2>\n  \n    <div class=\"mb-3\">\n      <label for=\"scriptKey\" class=\"form-label\">Enter Script Key</label>\n      <input type=\"text\" id=\"scriptKey\" class=\"form-control\" [(ngModel)]=\"selectedKey\" placeholder=\"e.g., get_users\" />\n    </div>\n  \n    <button class=\"btn btn-primary mb-3\" (click)=\"findScript()\">Find Script</button>\n  \n    <div *ngIf=\"result\" class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Description</h5>\n        <p class=\"card-text\">{{ result.description }}</p>\n  \n        <h5 class=\"card-title mt-3\">SQL Script</h5>\n        <pre class=\"bg-light p-3 border rounded\">{{ result.script }}</pre>\n      </div>\n    </div>\n  \n    <div *ngIf=\"result === null && selectedKey\" class=\"alert alert-warning mt-3\">\n      No script found for key \"<strong>{{ selectedKey }}</strong>\"\n    </div>\n  </div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}